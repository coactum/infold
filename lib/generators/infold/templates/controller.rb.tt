<%# encoding: utf-8 -%>
module Admin
  class <%= @writer.resource_name(:model) %>Controller < BaseController
    before_action { @page_title = '<%= @writer.app_title %>' }

    def index
      @search = <%= @writer.resource_name(:model) %>SearchForm.new(search_params)
      @<%= @writer.resource_name(:multi, :snake) %> = @search.perform(params[:page], limit: params[:limit], csv: request.format == :csv)
    end

    def show
      @<%= @writer.resource_name(:snake) %> = <%= @writer.resource_name(:model) %>.find(params[:id])
    end

    def new
      @<%= @writer.resource_name(:snake) %> = <%= @writer.resource_name(:model) %>.new
    <%- if association_build_code = @writer.association_build_code.presence -%>
      <%= association_build_code %>
    <%- end -%>
    end

    def create
      @<%= @writer.resource_name(:snake) %> = <%= @writer.resource_name(:model) %>.new
      @<%= @writer.resource_name(:snake) %>.assign_attributes(post_params)
      if @<%= @writer.resource_name(:snake) %>.save
        flash.now[:notice] = t('infold.flash.created')
        render :form
      else
        flash.now[:alert] = t('infold.flash.invalid')
      <%- if association_build_code = @writer.association_build_code(if_blank: true).presence -%>
        <%= association_build_code %>
      <%- end -%>
        render :form, status: :unprocessable_entity
      end
    end

    def edit
      @<%= @writer.resource_name(:snake) %> = <%= @writer.resource_name(:model) %>.find(params[:id])
    end

    def update
      @<%= @writer.resource_name(:snake) %> = <%= @writer.resource_name(:model) %>.find(params[:id])
      @<%= @writer.resource_name(:snake) %>.assign_attributes(post_params)
      if @<%= @writer.resource_name(:snake) %>.save
        flash.now[:notice] = t('infold.flash.updated')
        render :form
      else
        flash.now[:alert] = t('infold.flash.invalid')
      <%- if association_build_code = @writer.association_build_code(if_blank: true).presence -%>
        <%= association_build_code %>
      <%- end -%>
        render :form, status: :unprocessable_entity
      end
    end

    def destroy
      @<%= @writer.resource_name(:snake) %> = <%= @writer.resource_name(:model) %>.find(params[:id])
      if @<%= @writer.resource_name(:snake) %>.destroy
        redirect_to <%= @writer.index_path %>, status: :see_other, flash: { notice: t('infold.flash.destroyed') }
      else
        flash.now[:alert] = t('flash.invalid_destroy')
        render :show, status: :unprocessable_entity
      end
    end

    private

    def search_params
      <%= @writer.search_params_code&.gsub('[TAB]', '  ') %>
    end

    def post_params
      <%= @writer.post_params_code&.gsub('[TAB]', '  ') %>
    end
  end
end